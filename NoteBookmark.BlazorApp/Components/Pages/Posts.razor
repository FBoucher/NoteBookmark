@page "/posts"
@using NoteBookmark.Domain
@inject PostNoteClient client
@inject IJSRuntime jsRuntime
@rendermode InteractiveServer

<PageTitle>Posts</PageTitle>

<h1>Posts</h1>

@if (posts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentDataGrid Id="postgrid" Items="@posts" >
        <PropertyColumn Title="Title" Property="@(c => c!.Title)" Sortable="true"/>
        <PropertyColumn Title="Published" Property="@(c => (c!.Date_published ?? "0000-00-00").Substring(0,10))"  Sortable="true" SortBy="@defSort" IsDefaultSortColumn="true"/>
        <TemplateColumn>
            <FluentButton OnClick="@(async () => await OpenUrlInNewWindow(context!.Url))">...</FluentButton>
        </TemplateColumn>
    </FluentDataGrid>
}

@code {
    private IQueryable<Post>? posts;
    private GridSort<Post> defSort = GridSort<Post>.ByDescending(c => c.Date_published);

    protected override async Task OnInitializedAsync()
    {
        var urPosts = await client.GetUnreadPosts();
        posts = urPosts.AsQueryable();
    }

    private async Task OpenUrlInNewWindow(string? url)
    {
        await jsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
}
